{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPavyJ3qDnZz0yg7b+5UmA8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Movie Analytics Project\n","\n","\n","\n","## Necessary Imports\n","import os\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from google.colab import drive\n","\n","# Mount Google Drive to access and save files\n","drive.mount('/content/drive')\n","\n","# Set up directories in Google Drive\n","base_path = '/content/drive/MyDrive/MovieAnalytics/'\n","folders = ['data', 'visualizations', 'analysis', 'scripts']\n","\n","# Create necessary directories\n","for folder in folders:\n","    os.makedirs(os.path.join(base_path, folder), exist_ok=True)\n","\n","# Loading Data\n","# Load the actual datasets from the 'data' folder in Google Drive\n","profile_df = pd.read_csv(os.path.join(base_path, 'data', 'profile.txt'), sep='\\t')\n","watched_df = pd.read_csv(os.path.join(base_path, 'data', 'watched.txt'), sep='\\t')\n","ratings_df = pd.read_csv(os.path.join(base_path, 'data', 'ratings.txt'), sep='\\t')\n","diary_df = pd.read_csv(os.path.join(base_path, 'data', 'diary.txt'), sep='\\t')\n","reviews_df = pd.read_csv(os.path.join(base_path, 'data', 'reviews.txt'), sep='\\t')\n","watchlist_df = pd.read_csv(os.path.join(base_path, 'data', 'watchlist.txt'), sep='\\t')\n","comments_df = pd.read_csv(os.path.join(base_path, 'data', 'comments.txt'), sep='\\t')\n","\n","# Organize dataframes into a dictionary for saving purposes\n","dataframes = {\n","    'profile': profile_df,\n","    'watched': watched_df,\n","    'ratings': ratings_df,\n","    'diary': diary_df,\n","    'reviews': reviews_df,\n","    'watchlist': watchlist_df,\n","    'comments': comments_df\n","}\n","\n","# Save dataframes back to the data folder in .txt format\n","for name, df in dataframes.items():\n","    data_path = os.path.join(base_path, 'data', f\"{name}.txt\")\n","    df.to_csv(data_path, sep='\\t', index=False)\n","\n","# Viewing Trends Visualization\n","# This graph shows the number of movies watched over time\n","plt.figure(figsize=(12, 6))\n","plt.plot(watched_df['Date'], watched_df['Count'], marker='o', color='blue')\n","plt.title('Viewing Trends Over Time', fontsize=14)\n","plt.xlabel('Year-Month', fontsize=12)\n","plt.ylabel('Movies Watched', fontsize=12)\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.savefig(os.path.join(base_path, 'visualizations', 'viewing_trends.jpeg'))\n","plt.close()\n","\n","# Rating Distribution Visualization\n","# This bar chart shows ratings between 1.0 and 5.0 with half-point intervals\n","plt.figure(figsize=(10, 6))\n","half_point_ratings = [x / 2 for x in range(2, 10 + 1)]\n","rating_counts = ratings_df['Rating'].value_counts().reindex(half_point_ratings, fill_value=0)\n","plt.bar(half_point_ratings, rating_counts, width=0.4, edgecolor='black', color='orange', alpha=0.9)\n","plt.title('Rating Distribution (1.0 to 5.0 with Half-Point Ratings)', fontsize=14)\n","plt.xlabel('Rating', fontsize=12)\n","plt.ylabel('Frequency', fontsize=12)\n","plt.xticks(half_point_ratings)\n","plt.tight_layout()\n","plt.savefig(os.path.join(base_path, 'visualizations', 'rating_distribution_1_to_5.jpeg'))\n","plt.close()\n","\n","# Average Rating Trends Visualization\n","\n","if 'Average Rating' not in ratings_df.columns:\n","    ratings_df['Average Rating'] = ratings_df.groupby('Date')['Rating'].transform('mean')\n","\n","# This line chart shows the average ratings given over time\n","plt.figure(figsize=(12, 6))\n","plt.plot(ratings_df['Date'].unique(), ratings_df.groupby('Date')['Average Rating'].mean(), marker='o', color='purple')\n","plt.title('Average Rating Trends Over Time', fontsize=14)\n","plt.xlabel('Year-Month', fontsize=12)\n","plt.ylabel('Average Rating', fontsize=12)\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.savefig(os.path.join(base_path, 'visualizations', 'average_rating_trends.jpeg'))\n","plt.close()\n","\n","# Favorite Genres Visualization\n","\n","genres_df = reviews_df.groupby('Genre').size().reset_index(name='Count')\n","plt.figure(figsize=(10, 6))\n","plt.barh(genres_df['Genre'], genres_df['Count'], color='skyblue')\n","plt.title('Top Genres', fontsize=14)\n","plt.xlabel('Count', fontsize=12)\n","plt.ylabel('Genre', fontsize=12)\n","plt.tight_layout()\n","plt.savefig(os.path.join(base_path, 'visualizations', 'favorite_genres.jpeg'))\n","plt.close()\n","\n","# Favorite Directors Visualization\n","\n","directors_df = reviews_df.groupby('Director').size().reset_index(name='Count')\n","plt.figure(figsize=(10, 6))\n","plt.barh(directors_df['Director'], directors_df['Count'], color='lightgreen')\n","plt.title('Top Directors', fontsize=14)\n","plt.xlabel('Count', fontsize=12)\n","plt.ylabel('Director', fontsize=12)\n","plt.tight_layout()\n","plt.savefig(os.path.join(base_path, 'visualizations', 'favorite_directors.jpeg'))\n","plt.close()\n","\n","# Generating README.md\n","# This file describes the project and provides instructions for usage\n","readme_content = \"\"\"\n","# Movie Analytics Project\n","\n","This repository contains an analysis of personal movie-watching trends and preferences.\n","\n","## Repository Structure\n","- `data/`: Raw and processed datasets in .txt format.\n","- `visualizations/`: Visualizations from the analysis.\n","- `analysis/`: Jupyter Notebook and markdown files for results and recommendations.\n","- `scripts/`: Python scripts for reproducibility.\n","\n","## Key Features\n","1. Viewing trends over time.\n","2. Rating distribution analysis.\n","3. Insights into favorite genres and directors.\n","4. Recommendations for new movies.\n","5. Correlation analysis between genres and directors.\n","\n","## Visualizations\n","### Viewing Trends\n","![Viewing Trends](visualizations/viewing_trends.jpeg)\n","\n","### Rating Distribution\n","![Rating Distribution](visualizations/rating_distribution_1_to_5.jpeg)\n","\n","### Average Rating Trends\n","![Average Rating Trends](visualizations/average_rating_trends.jpeg)\n","\n","### Favorite Genres\n","![Favorite Genres](visualizations/favorite_genres.jpeg)\n","\n","### Favorite Directors\n","![Favorite Directors](visualizations/favorite_directors.jpeg)\n","\n","\n","\"\"\"\n","with open(os.path.join(base_path, 'analysis', 'README.md'), 'w') as readme_file:\n","    readme_file.write(readme_content)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mX7ZZynSZ6ep","executionInfo":{"status":"ok","timestamp":1736348430280,"user_tz":-180,"elapsed":3185,"user":{"displayName":"Burak Anlamaz (Student)","userId":"03656318392626281388"}},"outputId":"67d6a716-f53e-4d6a-8b7b-06b8fc2cc5d3"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]}]}